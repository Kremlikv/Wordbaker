name: Backup MySQL to db_backups Branch

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Dump MySQL database
        env:
          HOST: mysql-victork.alwaysdata.net
          USER: victork                # âœ… Use full MySQL user from AlwaysData
          PASS: ${{ secrets.ALWAYSDATA }}
          DB: victork_database1
        run: |
          mkdir -p backup_output
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          FILE="backup_output/backup_${DB}_$TIMESTAMP.sql"
          mysqldump -h "$HOST" -u "$USER" -p"$PASS" "$DB" > "$FILE"
          echo "âœ… Backup created: $FILE"

      - name: List contents for debug
        run: |
          echo "ðŸ“‚ Project root:"
          ls -l
          echo "ðŸ“‚ Backup folder:"
          ls -l backup_output

      - name: Commit and push backup to db_backups branch
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

          # Create db_backups branch if needed
          git fetch origin db_backups || true
          if ! git ls-remote --exit-code origin db_backups; then
            git checkout --orphan db_backups
            git rm -rf . > /dev/null 2>&1 || true
          else
            git checkout db_backups
            git pull origin db_backups
          fi

          # Prepare clean commit
          mkdir temp_db_push
          cp backup_output/*.sql temp_db_push/
          cd temp_db_push
          git init
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git remote add origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git add -f *.sql
          git commit -m "ðŸ”„ Auto-backup: MySQL dump on push" || echo "Nothing to commit"
          git branch -M db_backups
          git push -f origin db_backups

# FIX

# I set push to the same branch as my php files
# But when that branch is committed, it writes into  db_backups

# Fix: Enable GITHUB_TOKEN write permissions
# Go to your GitHub repository.
# Click Settings â†’ Actions â†’ General.
# Scroll to Workflow permissions.
#Make sure this is selected: Read and write permissions
# Click Save if needed.



#